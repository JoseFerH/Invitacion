{
  "entities": {
    "Guest": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Guest",
      "type": "object",
      "description": "Represents a guest attending the graduation party.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the guest."
        },
        "name": {
          "type": "string",
          "description": "The name of the guest."
        },
        "attendees": {
          "type": "number",
          "description": "The number of attendees (including the guest) for the invitation."
        }
      },
      "required": [
        "id",
        "name",
        "attendees"
      ]
    },
    "SongSuggestion": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SongSuggestion",
      "type": "object",
      "description": "Represents a song suggestion made for the graduation party.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the song suggestion."
        },
        "spotifyTrackId": {
          "type": "string",
          "description": "The Spotify track ID of the suggested song."
        }
      },
      "required": [
        "id",
        "spotifyTrackId"
      ]
    },
    "Event": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Event",
      "type": "object",
      "description": "Represents the Graduation Event details.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the graduation event."
        },
        "eventName": {
          "type": "string",
          "description": "The Name of the Event."
        },
        "eventDate": {
          "type": "string",
          "description": "The Date of the Event",
          "format": "date-time"
        },
        "eventLocation": {
          "type": "string",
          "description": "The location of the event."
        }
      },
      "required": [
        "id",
        "eventName",
        "eventDate",
        "eventLocation"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/events/{eventId}",
        "definition": {
          "entityName": "Event",
          "schema": {
            "$ref": "#/backend/entities/Event"
          },
          "description": "Stores graduation event details.",
          "params": [
            {
              "name": "eventId",
              "description": "Unique identifier for the graduation event."
            }
          ]
        }
      },
      {
        "path": "/guests/{guestId}",
        "definition": {
          "entityName": "Guest",
          "schema": {
            "$ref": "#/backend/entities/Guest"
          },
          "description": "Stores guest information and RSVP details.",
          "params": [
            {
              "name": "guestId",
              "description": "Unique identifier for the guest."
            }
          ]
        }
      },
      {
        "path": "/song_suggestions/{suggestionId}",
        "definition": {
          "entityName": "SongSuggestion",
          "schema": {
            "$ref": "#/backend/entities/SongSuggestion"
          },
          "description": "Stores all song suggestions made by any visitor.",
          "params": [
            {
              "name": "suggestionId",
              "description": "Unique identifier for the song suggestion."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to manage event details, guest information, and song suggestions. The 'events' collection holds event details. The 'guests' collection stores RSVP information, linked to an authenticated user ID for security. The 'song_suggestions' collection is now a top-level collection to allow any visitor, authenticated or not, to submit song ideas, simplifying the user experience for this feature."
  }
}
